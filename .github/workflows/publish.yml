name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - master

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE_NAME: blog
  DOCKER_IMAGE_TAG: latest
  SERVER_HOST: 34.239.114.247
  SERVER_USERNAME: ubuntu
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_DB: ${{ secrets.DATABASE_DB }}
  AT_SECRET: ${{ secrets.AT_SECRET }}
  RT_SECRET: ${{ secrets.RT_SECRET }}
  APPLICATION_PORT: ${{ secrets.APPLICATION_PORT }}


jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use --name mybuilder
          docker buildx build --platform linux/amd64,linux/arm64 --push -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .

      - name: Deploy Docker image to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            docker stop online-talim || true
            docker rm online-talim || true
            docker image rm ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} || true
            docker run -d --name online-talim -e POSTGRES_HOST=${{ env.DATABASE_HOST }} -e POSTGRES_USER=${{ env.DATABASE_USER }} -e POSTGRES_PASSWORD=${{ env.DATABASE_PASSWORD }} -e POSTGRES_DB=${{secrets.DATABASE_DB}} -e AT_SECRET= ${{secrets.AT_SECRET}} -e RT_SECRE=${{secrets.RT_SECRET}} -e APPLICATION_PORT=${{secrets.APPLICATION_PORT}} -e DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?schema=public" -p 8000:8000 ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
